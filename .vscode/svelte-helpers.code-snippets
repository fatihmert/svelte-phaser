{
  // Place your svelte-phaser workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "export prop": {
    "prefix": "el",
    "body": ["export let $1 = undefined", ""]
  },
  "apply prop": {
    "prefix": "ap",
    "body": [
      "$: shouldApplyProps($1) && $1 !== instance.$1 && (instance.$2)",
      ""
    ]
  },
  "apply prop if": {
    "prefix": "apif",
    "body": [
      "$: {",
      "\tif (shouldApplyProps($1)) {",
      "\t\tinstance$2",
      "\t}",
      "}",
      ""
    ]
  },
  "update instance": {
    "prefix": "ui",
    "body": ["$1 = instance.$1"]
  },
  "jsdoc": {
    "prefix": "/**",
    "body": ["/**", " * $1", " * @type {$2}", " */"]
  },
  "jsdoc number": {
    "prefix": "/**n",
    "body": ["/**", " * $1", " * @type {number}", " */"]
  },
  "jsdoc string": {
    "prefix": "/**s",
    "body": ["/**", " * $1", " * @type {string}", " */"]
  },
  "jsdoc boolean": {
    "prefix": "/**b",
    "body": ["/**", " * $1", " * @type {boolean}", " */"]
  }
}
